/* Author: Jacek Strotz
 * Date: 2/15/23
 * Description: This version of FrameMain provides a GUI for interacting with
 * the DFA class. First, it provides a JComboBox and JTextField for DFA file
 * and input file. Note that the purpose of JTextField is to specify path names
 * not scanned by the FrameMain constructor, or to include a web URL, preceded
 * by "http://". Although there is a standalone Check Validity button, this 
 * is automatically done when a user clicks "Read Input from File" as the 
 * validate function also handles parsing. The Check Validity button provides
 * a visual representation of the DFA in the JTextArea.
 * 
 * It is important to note that FrameMain utilizes the exterior library FlatLaf
 * to implement a dark theme. Since the library is specified by a system path,
 * it is entirely possible that when I upload this project, the reference
 * will break. To fix this, go to File -> Project Properties -> Libraries
 * and add library as classpath. This should not break, but it definitely could.
 */
package project1;

import com.formdev.flatlaf.FlatDarkLaf;
import java.io.File;
import java.net.URL;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.text.DefaultCaret;

public class FrameMain extends javax.swing.JFrame {

    DFA dfa;
    public FrameMain() {
        FlatDarkLaf.setup();
        
        initComponents();
        
        // set caret to end position to auto-scroll
        DefaultCaret caret = (DefaultCaret)outputArea.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE); 
        
        dfa = new DFA(outputArea);
        
        filterDFA();
        
        inputFileComboBox.removeAllItems();
        File[] listOfFiles = (new File("input/")).listFiles();
        
        // scan dir for files, add them to combobox
        Arrays.sort(listOfFiles);
        for (File file : listOfFiles) 
            if (file.getName().contains("input")) 
                inputFileComboBox.addItem(file.getName()); // ignore random files, only input
        
        optionComboBoxActionPerformed(null);
    }
    
    private void filterDFA() {
        dfaFileComboBox.removeAllItems();
        File[] listOfFiles = (new File("data/")).listFiles();

        // scan dir for files, add them to combobox
        Arrays.sort(listOfFiles);
        for (File file : listOfFiles) {
            In in = new In(file);
            dfa.validate(in.readAll());
            
            if (file.getName().contains("dfa")) {
                if (filterCheckBox.isSelected() && dfa.getValid() ||
                        !filterCheckBox.isSelected()) 
                    dfaFileComboBox.addItem(file.getName()); // ignore random files, only DFA
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        outputArea = new javax.swing.JTextArea();
        readDFAButton = new javax.swing.JButton();
        dfaFileComboBox = new javax.swing.JComboBox<>();
        validButton = new javax.swing.JButton();
        dfaFileTextField = new javax.swing.JTextField();
        inputFileComboBox = new javax.swing.JComboBox<>();
        inputFileTextField = new javax.swing.JTextField();
        readInputButton = new javax.swing.JButton();
        filterCheckBox = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        dfaTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        inputTextArea = new javax.swing.JTextArea();
        dfaLabel = new javax.swing.JLabel();
        inputLabel = new javax.swing.JLabel();
        mainSeparator = new javax.swing.JSeparator();
        jSeparator1 = new javax.swing.JSeparator();
        mtCheckbox = new javax.swing.JCheckBox();
        optionComboBox = new javax.swing.JComboBox<>();
        speedSlider = new javax.swing.JSlider();
        runButton = new javax.swing.JButton();
        stepButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(469, 306));
        setMinimumSize(new java.awt.Dimension(469, 306));
        setResizable(false);
        setSize(new java.awt.Dimension(484, 330));

        outputArea.setEditable(false);
        outputArea.setColumns(20);
        outputArea.setLineWrap(true);
        outputArea.setRows(5);
        outputArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(outputArea);

        readDFAButton.setText("Read DFA");
        readDFAButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readDFAButtonActionPerformed(evt);
            }
        });

        dfaFileComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        dfaFileComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dfaFileComboBoxActionPerformed(evt);
            }
        });

        validButton.setText("Check Validity");
        validButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        validButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validButtonActionPerformed(evt);
            }
        });

        inputFileComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        inputFileComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFileComboBoxActionPerformed(evt);
            }
        });

        readInputButton.setText("Read Input");
        readInputButton.setPreferredSize(new java.awt.Dimension(90, 22));
        readInputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readInputButtonActionPerformed(evt);
            }
        });

        filterCheckBox.setSelected(true);
        filterCheckBox.setText("Filter proper DFAs");
        filterCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterCheckBoxActionPerformed(evt);
            }
        });

        dfaTextArea.setColumns(20);
        dfaTextArea.setRows(5);
        jScrollPane2.setViewportView(dfaTextArea);

        inputTextArea.setColumns(20);
        inputTextArea.setRows(5);
        jScrollPane3.setViewportView(inputTextArea);

        dfaLabel.setText("DFA");

        inputLabel.setText("Input");

        mtCheckbox.setSelected(true);
        mtCheckbox.setText("Asynchronous");
        mtCheckbox.setEnabled(false);
        mtCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mtCheckboxActionPerformed(evt);
            }
        });

        optionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Show details", "Show results", "Show valid strings" }));
        optionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionComboBoxActionPerformed(evt);
            }
        });

        speedSlider.setMajorTickSpacing(25);
        speedSlider.setMaximum(999);
        speedSlider.setMinimum(874);
        speedSlider.setMinorTickSpacing(5);
        speedSlider.setPaintTicks(true);
        speedSlider.setToolTipText("Control the speed of the DFA");
        speedSlider.setValue(995);
        speedSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                speedSliderStateChanged(evt);
            }
        });

        runButton.setText("Run");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        stepButton.setText("Step");
        stepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stepButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(mainSeparator, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(validButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filterCheckBox)
                            .addComponent(mtCheckbox)
                            .addComponent(optionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dfaLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(inputLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(inputFileComboBox, 0, 363, Short.MAX_VALUE)
                            .addComponent(inputFileTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dfaFileComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dfaFileTextField, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(readDFAButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(readInputButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(speedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(runButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stepButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dfaFileComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dfaFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(readDFAButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(inputFileComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(readInputButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(stepButton, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                        .addComponent(runButton, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                    .addComponent(speedSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(resetButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dfaLabel)
                    .addComponent(inputLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(optionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(filterCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mtCheckbox))
                    .addComponent(validButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private boolean readDFAButtonActionPerformed(java.awt.event.ActionEvent evt) {
        In in;
        // check for web URL
        if (!dfaFileTextField.getText()
                .matches("(http)(s)?(:\\/\\/)(.)+")) { 
            try {
                in = new In("data/" + dfaFileTextField.getText());
            }
            catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error trying to open " 
                        + dfaFileTextField.getText() + "\n", "Alert",
                        JOptionPane.ERROR_MESSAGE);
                return false;
            }
        } else { 
            try {
                in = new In(new URL((String)dfaFileTextField.getText()));
            }
            catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Failed to read from " 
                        + dfaFileTextField.getText() + "\n", "Alert", 
                        JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
        if (in.exists())
                dfaTextArea.setText(in.readAll().trim());
        return true;
    }

    private void validButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validButtonActionPerformed
        String e = dfa.validate(dfaTextArea.getText(), inputTextArea.getText());
        if (!dfa.getValid() || !dfa.getInpValid()) {
            JOptionPane.showMessageDialog(null, e, 
                    "Alert", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_validButtonActionPerformed

    private void dfaFileComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dfaFileComboBoxActionPerformed
        dfaFileTextField.setText((String)dfaFileComboBox.getSelectedItem());
    }//GEN-LAST:event_dfaFileComboBoxActionPerformed

    private void inputFileComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputFileComboBoxActionPerformed
        inputFileTextField.setText((String)inputFileComboBox.getSelectedItem());
    }//GEN-LAST:event_inputFileComboBoxActionPerformed

    private void readInputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readInputButtonActionPerformed
        In in;
        // check for web url
        if (!((String)inputFileTextField.getText())
                .matches("(http)(s)?(:\\/\\/)(.)+")) { 
            try {
                in = new In("input/" + inputFileTextField.getText());                        
            }
            catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error trying to open " 
                        + inputFileTextField.getText() + "\n", "Alert", 
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
        } else {
            try {
                in = new In(new URL((String)inputFileTextField.getText()));
            }
            catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Failed to read from " 
                        + dfaFileTextField.getText() + "\n", "Alert", 
                        JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        if (in.exists())
            inputTextArea.setText(in.readAll().trim());
    }//GEN-LAST:event_readInputButtonActionPerformed

    private void filterCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterCheckBoxActionPerformed
        filterDFA();
    }//GEN-LAST:event_filterCheckBoxActionPerformed

    private void optionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionComboBoxActionPerformed
        dfa.flags = 0;
        if (mtCheckbox.isSelected()) dfa.flags |= 1 << 3;
        
        switch (optionComboBox.getSelectedIndex()) {
            case 0:
                dfa.flags |= 1;
                break;
            case 1:
                dfa.flags |= 1 << 1;
                break;
            case 2:
                dfa.flags |= 1 << 2;
                break;
        }
    }//GEN-LAST:event_optionComboBoxActionPerformed

    private void mtCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mtCheckboxActionPerformed
        optionComboBoxActionPerformed(null);
    }//GEN-LAST:event_mtCheckboxActionPerformed

    private boolean validateAction() {
        outputArea.setText("");
        String e = dfa.validate(dfaTextArea.getText(), inputTextArea.getText());
        if (!dfa.getInpValid() || !dfa.getValid()) {
            JOptionPane.showMessageDialog(null, e, 
                    "Alert", JOptionPane.ERROR_MESSAGE);
            return false;
        } 
        
        if (optionComboBox.getSelectedIndex() == 0) 
            outputArea.setText(e + "\n"); 
        
        dfa.initialize(inputTextArea.getText().split("\n"));
        return true;
    }
    
    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        boolean ret = true;
        if (dfa.getComplete()) 
            ret = validateAction();
        if (ret && dfa.getValid() && dfa.getInpValid()) {
            if (runButton.getText().equals("Run")) {
                runButton.setText("Pause");
                dfa.setPause(false);
            }
            else {
                runButton.setText("Run");
                dfa.setPause(true);
            }
        }
    }//GEN-LAST:event_runButtonActionPerformed

    private void speedSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_speedSliderStateChanged
        dfa.setSpeed(speedSlider.getValue());
    }//GEN-LAST:event_speedSliderStateChanged

    private void stepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stepButtonActionPerformed
        int len = outputArea.getText().length();
        while (outputArea.getText().length() == len) {
        if ((dfa.flags & 8) == 8) { // asynchronous
                    switch(dfa.singleStep()) {
                        case 0:
                        case 3:
                        default:
                            break;
                        case 1:
                        case 2:
                        case 4:
                            dfa.setPause(true);
                            FrameMain.runButton.setText("Run");
                            break;
                    }
                }
                else {
                    // cannot be used async
                    break;
                }
            
            try {
                Thread.sleep(2);
            }
            catch (Exception e) {

            }
        }
    }//GEN-LAST:event_stepButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        dfa.setValid(false);
        dfa.setInpValid(false);
        dfa.setPause(true);
        dfa.setComplete(true);
        outputArea.setText("");
        runButton.setText("Run");
    }//GEN-LAST:event_resetButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
       try {
            UIManager.setLookAndFeel( new FlatDarkLaf() );
        } catch( Exception ex ) {
            System.err.println( "Failed to initialize LaF" );
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> dfaFileComboBox;
    private javax.swing.JTextField dfaFileTextField;
    private javax.swing.JLabel dfaLabel;
    private javax.swing.JTextArea dfaTextArea;
    private javax.swing.JCheckBox filterCheckBox;
    private javax.swing.JComboBox<String> inputFileComboBox;
    private javax.swing.JTextField inputFileTextField;
    private javax.swing.JLabel inputLabel;
    private javax.swing.JTextArea inputTextArea;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator mainSeparator;
    private javax.swing.JCheckBox mtCheckbox;
    private javax.swing.JComboBox<String> optionComboBox;
    private javax.swing.JTextArea outputArea;
    private javax.swing.JButton readDFAButton;
    private javax.swing.JButton readInputButton;
    private javax.swing.JButton resetButton;
    public static javax.swing.JButton runButton;
    private javax.swing.JSlider speedSlider;
    private javax.swing.JButton stepButton;
    private javax.swing.JButton validButton;
    // End of variables declaration//GEN-END:variables
}
